#!/bin/bash



# Colors
GREEN='\033[1;32m' # Green
BLUE='\033[1;34m' # Blue
RED='\033[1;31m' # Red
RESET='\033[0m' # No Color


# Default WP Version
WP_VERSION=latest



if [[ ! -z $1 ]]; then

	SLUG=$1

else

	# Get Project Name
	read -ep "Please enter which project would you like to add from GitHub (site-name): " SLUG
	[[ -z "$SLUG" ]] && exit || sleep 0

fi




if [[ -d $SLUG ]]; then

	read -ep "This project is already exist. Would you like to remove it and reinstall? (Type 'yes' or 'y' to confirm): " override
	if [[ $override == "yes" ]] || [[ $override == "y" ]]; then

		rm -rf $SLUG
		echo "Existing folder removed"

	fi

fi




# TEST THE GIT REPO
if [[ $override == "yes" ]] || [[ $override == "y" ]] || [[ -z $override ]]; then


	echo -e "Project '${SLUG}' clonning..."
	if git clone https://github.com/Twelve12com/${SLUG}.git &>/dev/null; then

		echo -e "Project '${SLUG}' clonned ... ${GREEN}done${RESET}"

	else

		echo -e "${RED}Remote repository not found.${RESET}"
		exit

	fi


fi




# If WP repo
DB_FILE=$SLUG/database/dump/wordpress_data.sql
if [[ -f $DB_FILE ]]; then


	# Ask for the DB info
	read -ep "DB Name: " DBNAME
	[[ -z $DBNAME ]] && exit || sleep 0

	read -ep "DB User: " DBUSER
	[[ -z $DBUSER ]] && exit || sleep 0

	read -ep "DB Password: " DBPASS
	[[ -z $DBUSER ]] && exit || sleep 0

	export MYSQL_PWD=$DBPASS

	# TEST THE DB
	RESULT=`mysqlshow --user=${DBUSER} ${DBNAME}| grep -v Wildcard | grep -o ${DBNAME}`
	while [ "$RESULT" != ${DBNAME} ]; do


		echo -e "${RED}Wrong DB info.${RESET}"

		# Ask for the DB info
		read -ep "DB Name: " DBNAME
		[[ -z $DBNAME ]] && exit || sleep 0

		read -ep "DB User: " DBUSER
		[[ -z $DBUSER ]] && exit || sleep 0

		read -ep "DB Password: " DBPASS
		[[ -z $DBUSER ]] && exit || sleep 0

		export MYSQL_PWD=$DBPASS


	done





	# ACTION:

	# Get environmental data
	if [[ -f $SLUG/local.env ]]; then

		source $SLUG/local.env

	fi


	if [[ -f $SLUG/.env ]]; then

		source $SLUG/.env

	fi



	# Download the WP
	if [[ ! -f $SLUG/wp/wp-config.php ]]; then


		# Download the WP files
		echo -e "WP files adding..."
		wp --path=${SLUG}/wp core download --version=${WP_VERSION} --skip-content --force
		echo -e "WP Files added ... ${GREEN}done${RESET}"


		# Create the config file
		echo -e "DB info updating..."
		wp --path=${SLUG}/wp config create --dbname=$DBNAME --dbuser=$DBUSER --dbpass=$DBPASS --dbhost=localhost --force
		echo -e "DB info updated ... ${GREEN}done${RESET}"


	fi



	# Empty the DB
	echo -e "Cleaning the tables..."
	wp --path=${SLUG}/wp db reset --yes
	echo -e "All the tables removed ... ${GREEN}done${RESET}"



	#Â Import the DB
	echo -e "DB importing..."
	wp --path=${SLUG}/wp db import "${DB_FILE}"
	echo -e "DB imported ... ${GREEN}done${RESET}"



	# Memory Limit
	echo -e "Memory limit increasing to 512 MB..."
	wp --path=${SLUG}/wp config set WP_MEMORY_LIMIT 512M
	echo -e "Memory limit increased ... ${GREEN}done${RESET}"



	# Uploads location update
	echo -e "Uploads location updating..."
	wp --path=${SLUG}/wp option update upload_path wp-content/uploads
	echo -e "Uploads location updated ... ${GREEN}done${RESET}"



	# URL Replacement
	echo -e "DB url replacement starting..."
	wp --path=${SLUG}/wp search-replace "${DOMAIN}" "${PREFIX}.twelve12.co" --recurse-objects --report-changed-only --all-tables
	echo -e "DB url replacement finished ... ${GREEN}done${RESET}"



	# Rewrite Flush
	wp --path=${SLUG}/wp rewrite flush --hard




	# PRINT THE SITE INFO
	echo ""
	echo ""
	echo -e "== ${GREEN}Site Import Complete${RESET} ===================="
	echo ""
	echo -e "${BLUE}IMPORTANT:${RESET} Now, create a subdomain named '${BLUE}${PREFIX}${RESET}' for the '${BLUE}public_html/${SLUG}/wp${RESET}' folder. Then, the URL below will be working."
	echo ""
	echo "Live URL will be: http://${PREFIX}.twelve12.co"
	echo ""
	echo "================================="
	echo ""
	echo ""


fi
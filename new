#!/bin/bash



# Colors
GREEN='\033[1;32m' # Green
BLUE='\033[1;34m' # Blue
RED='\033[1;31m' # Red
RESET='\033[0m' # No Color




# Get Project Name
read -ep "Please enter which project would you like to add from BitBucket (site-name): " SLUG
[[ -z "$SLUG" ]] && exit || sleep 0


if [[ -d $SLUG ]]; then

	read -ep "This project is already exist. Would you like to remove it and reinstall? (Type 'yes' or 'y' to confirm): " override
	if [[ $override != "yes" ]] && [[ $override != "y" ]]; then

		exit

	fi

	rm -rf $SLUG

fi




# TEST THE GIT REPO
echo -e "Project '${SLUG}' clonning..."
if git clone https://twelve12com@bitbucket.org/twelve12com/${SLUG}.git &>/dev/null; then


	echo -e "Project '${SLUG}' clonned ... ${GREEN}done${RESET}"


	if [[ ! -f $SLUG/wp/wp-config.php ]]; then


		echo -e "WP files adding..."


		# Download the WP files
		wp --path=${SLUG}/wp --skip-content core download


		echo -e "WP Files added ... ${GREEN}done${RESET}"

	fi



	# Detect old version
	if [[ -d ${SLUG}/wp-content ]]; then


		echo -e "WP-content folder moving..."


		# Remove the old wp-content
		rm -rf ${SLUG}/wp/wp-content


		# Move our wp-content folder
		mv ${SLUG}/wp-content ${SLUG}/wp/wp-content


		echo -e "WP-content folder moved ... ${GREEN}done${RESET}"

	fi


else

	echo -e "${RED}Remote repository not found.${RESET}"
	exit

fi



# Ask for the DB info
read -ep "DB Name: " DBNAME
[[ -z $DBNAME ]] && exit || sleep 0

read -ep "DB User: " DBUSER
[[ -z $DBUSER ]] && exit || sleep 0

read -ep "DB Password: " DBPASS
[[ -z $DBUSER ]] && exit || sleep 0

export MYSQL_PWD=$DBPASS

# TEST THE DB
RESULT=`mysqlshow --user=${DBUSER} ${DBNAME}| grep -v Wildcard | grep -o ${DBNAME}`
if [ "$RESULT" != ${DBNAME} ]; then
    echo -e "${RED}Wrong DB info.${RESET}"
    exit
fi





# ACTION:

# Get the site info
source ${SLUG}/.env



# Empty the DB
echo -e "Cleaning the tables..."
bash drop-mysql-tables.sh ${DBUSER} ${DBPASS} ${DBNAME}
echo -e "All the tables removed ... ${GREEN}done${RESET}"



#Â Import the DB
echo -e "DB importing..."
mysql --silent --user=${DBUSER} ${DBNAME} < ${SLUG}/database/dump/wordpress_data.sql
echo -e "DB imported ... ${GREEN}done${RESET}"



# Update the DB info
echo -e "DB info updating..."
if [[ -f ${SLUG}/wp/wp-config.php ]]; then

	wp --path=${SLUG}/wp config set DB_NAME $DBNAME
	wp --path=${SLUG}/wp config set DB_USER $DBUSER
	wp --path=${SLUG}/wp config set DB_PASSWORD $DBPASS
	wp --path=${SLUG}/wp config set DB_HOST localhost

else

	# Create the config file
	wp --path=${SLUG}/wp config create --dbname=$DBNAME --dbuser=$DBUSER --dbpass=$DBPASS --dbhost=localhost

fi
echo -e "DB info updated ... ${GREEN}done${RESET}"



# URL Replacement
echo -e "DB url replacement starting..."
wp --path=${SLUG}/wp search-replace "${DOMAIN}" "${PREFIX}.twelve12.co" --recurse-objects --report-changed-only --skip-columns=guid --skip-tables=wp_users
echo -e "DB url replacement finished ... ${GREEN}done${RESET}"



# Rewrite Flush
wp --path=${SLUG}/wp rewrite flush --hard




# PRINT THE SITE INFO
echo ""
echo ""
echo -e "== ${GREEN}Site Import Complete${RESET} ===================="
echo ""
echo -e "${BLUE}IMPORTANT:${RESET} Now, create a subdomain named '${BLUE}${PREFIX}${RESET}' for the '${BLUE}public_html/${SLUG}/wp${RESET}' folder. Then, the URL below will be working."
echo ""
echo "Live URL will be: http://${PREFIX}.twelve12.co"
echo ""
echo "================================="
echo ""
echo ""